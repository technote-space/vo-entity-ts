on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

name: CI

jobs:
  code-style:
    name: Check code style
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      LINT: 1
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: npm
      - name: Install Package dependencies
        run: npm i
      - name: Check code style
        run: npm run check

  cover:
    name: Coverage
    needs: code-style
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        node: ['18', '20', '22']
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm
      - name: Install Package dependencies
        run: npm i
      - name: Run tests
        run: npm run cover
      - name: Codecov
        run: |
          if [ -n "$CODECOV_TOKEN" ]; then
            curl -s https://codecov.io/bash | bash -s -- -t $CODECOV_TOKEN -f $COVERAGE_FILE
          fi
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          COVERAGE_FILE: ./coverage/lcov.info
        if: matrix.node == '22'

  package:
    name: Publish Package
    needs: cover
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        target: ['npm', 'gpr']
    steps:
      - name: Set running flag
        run: echo "RUNNING=1" >> $GITHUB_ENV
      - name: Set running flag
        run: |
          if [ -z "$NPM_AUTH_TOKEN" ]; then
            echo "RUNNING=" >> $GITHUB_ENV
          fi
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - uses: actions/checkout@v3
        if: env.RUNNING
      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          COMMIT_DISABLED: 1
        if: env.RUNNING
      - name: Set running flag
        run: npx can-npm-publish || echo "RUNNING=" >> $GITHUB_ENV
        if: env.RUNNING && matrix.target == 'npm'
      - name: Set running flag
        run: |
          LATEST=`npm view . version` 2> /dev/null || :
          CURRENT=`cat package.json | jq -r .version`
          if [ "$LATEST" = "$CURRENT" ]; then
            echo "RUNNING=" >> $GITHUB_ENV
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.RUNNING && matrix.target == 'gpr'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
          cache: npm
        if: env.RUNNING && matrix.target == 'npm'
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          registry-url: https://npm.pkg.github.com
          cache: npm
        if: env.RUNNING && matrix.target == 'gpr'
      - name: Install Package dependencies
        run: npm i
        if: env.RUNNING
      - name: Build
        run: npm run build
        if: env.RUNNING
      - name: Publish
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN
          npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        if: env.RUNNING && matrix.target == 'npm'
      - name: Publish
        run: |
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: env.RUNNING && matrix.target == 'gpr'

  publishRelease:
    name: Create Release
    needs: [package]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Get version
        run: echo "TAG_NAME=${HEAD_REF#refs/tags/}" >> $GITHUB_ENV
        env:
          HEAD_REF: ${{ github.ref }}
      - name: Create Release
        id: drafter
        uses: technote-space/release-drafter@v6
        with:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          DRAFT: false
          NAME: ${{ env.TAG_NAME }}
          TAG: ${{ env.TAG_NAME }}
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: ${{ format('<{0}>', steps.drafter.outputs.html_url) }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: success() && env.SLACK_WEBHOOK_URL

  slack:
    name: Slack
    needs: publishRelease
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - uses: 8398a7/action-slack@v3
        with:
          status: failure
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: env.WORKFLOW_CONCLUSION == 'failure' && env.SLACK_WEBHOOK_URL
